<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAASwAAAEsCAYAAAB5fY51AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAACB
        wQAAgcEBLKatSwAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAABhZSURBVHhe7Z0J
        sB1VgYbJTgIJCSQkhBATSAgGkhQRksgmUzLIJoKiGEQpkAEBYaZYRofCBSUBjGGQxWKRYWoGsBBqCqsY
        xFIBawhVYFQgyE4RCCELOy4sAj3/39X3zfHOeYG825306ft9VV8RXrr73XvffV+6zz3dvQkAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAQJ/YVI6R28md5R5yH6yNu8kpchs5Ug6QAF3FCLm3PF1eL38vn5Gr
        5UvyFfkyblRbP4MX5PPyCXmnvEgeJafKgRKgsXhP6mj539JheldmmJxvSgdssZwrh0iAxjBIHijvkm/I
        2C8Bpud7cpV0uCZKgOTZSp4r18rYmx7T13vKS+T+sr8ESJLR8mr5toy90bFZehzyM7KfBEgKf6J0pfyr
        jL25sZk+Kw+TAMngw4Iz5Vsy9qbGZvuQ9BQVgCSYJ5fL2JsZu8MfyWESoNb4I+5rZexNjN2j53F5EB6g
        1vhQwIOvsTcxdpeXSGbGQ635qmRCKNo/SJ9yBVBLPNh+mYy9ebH79NkMPjcUoJZ4kPVmGXvzYvf5Z/lp
        CVBLPPfKp9/E3rzYfXoO3gkSoJZsKe+WsTcvdp8eyzxZAtQSgoWhBAtqDcHCUIIFtYZgYSjBglpDsDCU
        YEGtIVgYSrCg1hAsDCVYUGsIFoYSLKg1BAtDCRbUGoKFoQQLag3BwlCCBbWGYGEowYJaQ7AwlGBBrSFY
        GEqwoNYQLAwlWFBrCBaGEiyoNQQLQwkW1BqChaEEC2pNZcEaNmxYNmbMmGzChAnZpEmTcD316+bXb7PN
        Nsv69esXfY0rkGBBrSk1WP3798+mTp2anXzyydl1112X3X333dmyZcuyhx9+GNdTv25LlizJbrjhhuzU
        U0/Npk2blr++sde9RAkW1JrSgjVixIg8VPfee2/20ksvZa+99lr26quvYof6dXz55ZezpUuX5uHaYost
        oq9/SRIsqDWlBGv06NHZxRdfnK1Zs6bnFwzL1fFau3Ztdvnll2djx46N/hxKkGBBrek4WEOHDs0WLFiQ
        vfjii9krr7wS/WXDcmy9vosXL87HtmI/jw4lWFBrOg7W4Ycfnq1YsYJYbSD9Oj///PPZ/Pnzoz+PDt1Y
        wRoip8ut5SB/ASBGR8EaOXJkdsstt3AYuIH163377bfnh+Kxn0sHbqxgfVg+JH8nr5JfkXPkaDlQAuR0
        FKy99947W758OXtXG1i/3t6r3W+//aI/lw7cWMH6gnxTth6H70D9grxPXim/KD8kiVeX01GwTjvtNGK1
        kfQg/Jlnnhn9uXTgxghWP7lYxh5PS8fsYXmpPFB6z8vrQZfRUbAWLlyYvf7669FfKKxWv+6LFi0qe27W
        xgjWSHmXjD2emK/Le+Q35Ww5WEKX0OdgDRo0KLv00ksJ1kbSr/uVV16ZDR48OPrz6aMbI1gz5PMy9njW
        5XtyhbxYzpIDJDScjoJ12WWXEayNpAfer7rqqmzIkCHRn08f3RjB+pJ8S8YezwfR4XpaLpDTZH8JDYVg
        JWpDguVxKO8hxR7L+urH/qg8S/p9DQ2EYCVqQ4LV5/ffOvTe2k1yFwkNg2AlakOCtYP8vQynNJTlA/Iz
        kkH5BkGwErUhwfKsdo87fV4uknfIlbKsgL0kvyE3l9AACFaiNmjQvYUHy7eQO0tPJPWcK89+7zRef5Ge
        AjFUQuIQrERtYLDa8az2idLxukF6CoNnwMce9/v5R3mG5PAwcQhWonZBsEI2lR5E9yeAHvPqS7hekT5H
        kflaCUOwErXLgtXC0yAmybOlpzD48caeR2+ukn8vIVEIVqJ2abBaeLzLg/U+B9F7TrHn0pu/lGMlJAjB
        StQuD1YLX0frSOnB+djzienDyX+RzIhPEIKVqASrBw/OXyh9ik7sOcX0qTy7S0gMgpWoBKsHX27GY1P5
        cxg3blx27LHHZkcddVQ2atSo9ucX6sNJBuATg2AlKsHK8fv35zJ//Ntss01+eznftck3RLnooovWdZeh
        R+T2EhKCYCUqwco5Rr4h89fhwgsvzF8bX1TSOlqnnHJKbzei9VjWSRISgmAlKsHaZJT0qTz5Y99nn32y
        p556Kr8Sa+s18p9/+9vfZjvvvHP782x5uxwhIREIVqISrE0+Ll+V2aabbppdffXV+WvS/jp5T+vrX/96
        7LlaXzjQpwJBIhCsRO3yYHkCqT8ZzB/3zJkzs0ceeeRv9q5a+mu//vWv8/Gt1vKBPk/xKAmJQLAStcuD
        NUb6jjr54/bNUDzQHnudvIe1cuXK7OCDD25/ri19lQhIBIKVqF0erLnyRZltvvnm2U033RQ9HGzpvaxv
        fetbsedrb5PDJSRAR8HiJhQbT7/uvglFlwbrBJmfAD158uTswQcfjB4Otnyf1+pB6TtOQwL0OVj+qPiC
        Cy4gWBtJv+6eZzRgwIDoz6ePphAsn1Jzucwf84EHHpg999xzvd4f01/3p4cHHHBA+3Nt+ZxkPlYi9DlY
        9vTTT1/nv2xYnT4EWsenX301hWB5GkLPZNEzzjjjfd+D5513Xn5E0FqnTR9azpOQAB0Fy7dK9y3Te/vX
        DauxNZB8yCGHRH8uHZhCsMZJ3wU6GzhwYHbJJZf0upfvqP/qV7/KJk2aFHuuLX1j1oMkJEBHwRo9enT2
        i1/8Yp0Dnli+fr3X8VF9J6YQLF/Ib7XMhg8fnt18883R95+j/swzz2SHHXZY7HmG/ln6ZhWQAB0Fyx5z
        zDHZ6tWr2cvaQPp1Xrt2bXbiiSdGfx4dmkKwDpDeK8q23nrr7J577okeEvp18hifJ5V6We+N7bjjjrGB
        d8/F8mWYIQE6DpZPLr3iiivyNwjRql7/cl577bXZlltuGf15dGgKwXJc8htTTJkyJTph1P+/ZMmSPFBe
        zs6ZM6e3k6HflsdKSICOg2UnTpyYXX/99fnkvfcbAMW+2Xpdf/KTn2Tbb7999OdQgikEyycsvyOz2bNn
        Z08++eTf/EPpP3t8z5eX8TLWkfJVHO68885Y6B2s4yQkQCnBsmPHjs2+853vZI899lg+pmD9S9ba88L1
        16+f9Wv5xBNPZAsXLszGjx8fff1LMoVg/bPMH69PeF6+fHn+WoVh9x7/Zpttli/j6TcnnHBCfhi9dOnS
        /H3aWr/Qd4r2VR8gAUoLlh08eHA2b968bMGCBdkdd9yR7657DszTTz+N66lft0cffTS766678vlue+65
        Z9mTRGOmEKxzZf54DzrooL+Zg+VY3Xfffdkuu+zS85xmzZqVX7HBnyTef//9sQ8qfHh5tIQEKDVYLT2Z
        cauttsrHGHbfffdsjz32wPXUr9vUqVPzT2I9YBx7nSswhWAtkPnj/eQnP5kf/rWC5f+Gc9P8KeI111zT
        s6f6wAMPxILl62nNl5AAlQQLkzWFYH1X5o/XJzSHe1gvvPBCdvzxx+d/50PB4447Llu1alX+9w7WsmXL
        YsHynaE/JyEBCBaGJnVI6NNywonL/q8H1j3gfuqpp2YPPfRQHqrW4aLPOYwEi3lYCUGwMDSFYH1b5o93
        //33z5599tmeYLWi5XmB3tsKv+5g3Xvvvfncrdb6hQ7WpyUkAMHC0BSC1fMpoT+I8AcUYZha0Qr/3zpY
        Pk0nMq3Bh4RHSEgAgoWhKQSr59Iy/jTw8ccfjwaqXU8N+elPf5qNGDGi/Tl70N03Y4UEIFgYmkKwPiu9
        V5RPWA7Hqdalg+UzBIYOHdr+nD1x9MsSEoBgYWgKwdpP5jefGDNmTK/nErbreVieH+j1Ip4lIQEIFoam
        ECzf5Sa/WoMvj3zjjTfme0+xSLV78sknx56z/YH0jS2g5hAsDE0hWL6c8f0yn2vlm6e+31VvPcblCaaH
        Hnpo7Dlb399wpISaQ7AwNIVgDZP/JfPHfNJJJ0UjFepg+TSn6dOntz/flr7q6Mck1ByChaEpBMt8T+aP
        ed99980v1LeuTwp9yPizn/0sGzlyZPvzbenn7QmpHBbWHIKFoakEyzc/za+JNW7cuPzaV+saePch46JF
        i7L+/fu3P19vY6n03C5uRJEABAtDUwnWTnKFfN/7Y3rPy+cTHnHEET3PU+F6p1+/fnfqz57OMF6yZ5UI
        BAtDUwmWb3zqG6Dmj3v+/PnZmjVrooeFrVNytttuu3xZD9RvM27c6h2nTJn5if08QwJSgmBhaCrBMl+T
        78lswoQJvR4WevzKh4OtS/QMGTw4mzVjxsp999pr8p7zuLtXahAsDE0pWDPlszLfazrnnHP+3x6WA+ZP
        B+fOndvzHEdvtVU2b/fdVypW2+8x13e8h5QgWBiaUrAGy3+T+WP3xQ69lxVOInXAzj///J6bqA7o3z+b
        puUUq5WKFcFKEIKFoSkFy3gQaq3MH/+RRx6ZX73BA/D21ltvzSZPntzz/LYcNSqbu9tumUJFsBKFYGFo
        asEaJBfLfCzLe1IegL/tttvySyPPmDGj57kNGjgwmz5tmveuCFbCECwMTS1YZgfZ8x72eJZv6zVs2LCe
        5+X5VxO32y776Jw5jhXBShiChbn+pd50yJB3R40c+e19997bv8xTK3BHOUZuYktktoy+j/28xo8b1zoU
        JFiJQ7Awd/jmm2e7zpzpT9Be0y/y8xW5Vn5Tlh0sM01eLJ+UvvzM2mFDh742Zfvts7m+c9P/xYpgJQzB
        wlxfibNtL6QqF8oqgmU8pjVF7itnz54164rg+4YSrEQhWJg7YvjwbM5HPhL75S7bc2VVwcr52F57bbLb
        rrv6e1xQfM92CVaiECzM3YDBOkfqW1aHt194oYw9BoKVKAQLczdgsM6S+pbV4e0XEqyGQbAwtzWGVcxT
        qsr35D9Kfcvq8PYLCVbDIFiYO2TIkGy7bbd9b/pOO92uaJ2nX2YPjvdFr/tj+aZsD8U78itS37I6vP1C
        gtUwCBaGdjxx1BGQB8nXZXso3pbHyWLpavD2CwlWwyBYGFpWsA6Xf5LtofBe19GyWLoavP1CgtUwCBaG
        lhWsI+Ubsj0Uf5Gfk8XS1eDtFxKshkGwMLSsYH1RxsawvNf1KVksXQ3efiHBahgEC0PLCtaX5V9leyg8
        rnWgLJauBm+/kGA1DIKFoWUF6yT5rmwPxavy47JYuhq8/UKC1TAIFoaWFazTpOdctYfiZbmPLJauBm+/
        kGA1DIKFoWUF659kLBQO1p6yWLoavP1CgtUwCBaGlhWs02UsFC/Jj8pi6Wrw9gsJVsMgWBhaVrB8vmAs
        FC/KObJYuhq8/UKC1TAIFoaWFayvyVgoXpC7yWLpavD2CwlWwyBYGFpWsM6WsVD4iqO7ymLpavD2CwlW
        wyBYGFpWsHzNq1goHKxZsli6Grz9QoLVMAgWhnYULAeg0Ndtj4VijZwhizWqwdsvJFgNg2BhaFnB8mWQ
        Y6FYLafLYo1q8PYLCVbDIFgYWlawvitjoVgld5LFGtXg7RcSrIZBsDC0rGAtkLFQ+FZfvjdhsUY1ePuF
        BKthECwMLStYvd2txsHaQRZrVIO3X0iwGgbBwtCygvU92VsoJstijWrw9gsJVsMgWBhaVrC+L2OheE5O
        lMUa1eDtFxKshkGwMLSsYP2rjIVihZwgizWqwdsvJFgNg2BhaBnB6id/IGOheEZuK4s1qsHbLyRYDYNg
        YWgZweovL5OxUDwtx8tijWrw9gsJVsMgWBhaVrB+KGOheEoSLOgzBAtDywjWAHmFjIXicbmNLNaoBm+/
        kGA1DIKFoWUEa6C8WsZC8agcJ4s1qsHbLyRYDYNgYWgZwRokr5GxUPxBjpXFGtXg7RcSrIZBsDC0jGAN
        ltfKWCiWya1lsUY1ePuFBKthECwMLStY/yFjoXhAEizoMwQLQ8sI1hB5nYyF4ndyjCzWqAZvv5BgNQyC
        haFlBet6GQsFwYKOIFgYSrCg1hAsDCVYUGsIFoYyhgW1hmBhKMGCWkOwMJRgQa0hWBhKsKDWECwMJVhQ
        awgWhhIsqDUEC0MJFtQagoWhVQfr95JgQZ8hWBhaVrD+U8ZCQbCgIwgWhhIsqDUEC0MJFtQagoWhBAtq
        DcHCUIIFtYZgYSjBglpDsDCUYEGtIVgYWnWw7pcEC/oMwcJQggW1hmBhKMGCWkOwMLSsYPV2my+CBR1B
        sDB0QwSL+xJCnyFYGEqwoNYQLAwtI1jruvMzwYKOIFgYSrCg1hAsDCVYUGsIFoZWHawHJMGCPkOwMLSs
        YP27jIVimSRY0GcIFoaWEaxB8kcyFoqH5VhZrFEN3n4hwWoYBAtDywjWQHmljIXiMTlOFmtUg7dfSLAa
        BsHC0DKCNUD+UMZC8ZQcL4s1qsHbLyRYDYNgYWgZweovL5WxUCyX28pijWrw9gsJVsMgWBhaRrD6yYtl
        LBQr5ARZrFEN3n4hwWoYBAtDywiWXSxjoXhOTpTFGtXg7RcSrIZBsDC0rGBt1FB4+4UEq2EQLAwtK1gL
        ZSwUz8upslijGrz9QoLVMAgWhpYVrO/KWChWyZ1ksUY1ePuFBKthECwMLStY35axUKyWO8tijWrw9gsJ
        VsMgWBjaUbCMIyC/IWOhWCNnymLpavD2CwlWwyBYGFpWsM6WsVC8IGfLYulq8PYLCVbDIFgYWlawzpSx
        ULwk58li6Wrw9gsJVsMgWBhaVrC+Kt+T7aF4Re4ri6WrwdsvJFgNg2BhaFnB+gf5V9keitfkJ2SxdDV4
        +4UEq2EQLAwtK1hfkm/J9lD8SR4qi6WrwdsvJFgNg2BhaFnBOlL+RbaHwl/7rCyWrgZvv5BgNQyChaFl
        BetT0ntT7aF4Ux4ti6WrwdsvJFgNg2BhaFnBOkC+LttD4XGt42WxdDV4+4UEq2EQLAwtK1h/J/2JYHso
        3pWnyGLpavD2CwlWwyBYGFpWsPaQnnMVi8Xpsli6Grx96etyXSJjj8HBmiyLNSAVCBaGlhUsz2b3rPZY
        LL4p8+Wqotj+lvIOGXsMvntP5TfDgPIhWBhaVrB2kL66aCwWvgWYbwVWrFEu3q70deU9eTX2SaW9RW4m
        i7UgFQgWhpYVrFHyf2QsFr7VVyXXxPI25TB5ovSJ1rHvb8+X+fKQFgQLQ8sKlm/1dZWMxcID777m++ay
        WKszvB3p7zlD+hZjsU8oWz4r58pibUgJgoWhZQXLfkW+I2PR8KGaB8T9SZ0Hx4u1Pzhep9Dh210ukk/L
        2DmMLf13vhqqDxmLLUFKECwM7ThYxjGQvtnEfTIWDus9rfvl1+SucgvZa0j8dem4DZXbyL2lP3G8Vfrw
        b12haunDVKYzJAzBwtAyg2W/LD27PRaPlt4L86WTfykvl2fI4+Tn5OHSp/kcI/31i+RN0p/yvSx724OL
        ea/Mr8VlIU0IFoaWEixThGGk/LH8IHs/Lb3s29KHjX+Wb0ifSL0+2wj1et6z2k0Sq8QhWBhadrCsb5x6
        o/QhYCwoVfqq/IGcJIlVAyBYGFpasFoUoRgvPf+qt3lRZevv40PMz0iPeRWPBlKHYGFo6cEyDoYcIT0W
        9Ru5PmNPH1Qf+vl0oNvkfOmZ7uxVNQyChaGVBMu04iE/JH3Nd58248D0dWzKeqzLpwAtkefKvaTDSKga
        CsHC0MqC1aKIiacneEB+H3mOvEEulf600Fd5+KP0YLs/YfTAu//fX/ff/0H+XHoely9V4zlY3pvqL4vv
        Ak2FYGFo5cEKcWAKN5Wj5XT5MXmw/Lz8gjxCHiJ9yZoPS5+07L0oJn92IQQLQzdosADWF4KFoQQLag3B
        wlCCBbWGYGEowYJaQ7AwlGBBrSFYGEqwoNYQLAwlWFBrCBaGEiyoNQQLQwkW1BqChaEEC2oNwcJQggWl
        MlxOKMlt5S7yNzL25sXu08E6W46TsffM+jpSQhdzonxOrijJlfItGXvzYnf6ioy9V9bXVXKB7C+hSzlT
        xt5kiHX0h5JgdTFnyNgbA7GOXi4JVhdDsDAlCVaXQ7AwJQlWl0OwMCUJVpdDsDAlCVaXQ7AwJQlWl0Ow
        MCUJVpdDsDAlCVaXQ7AwJQlWl0OwMCUJVpdDsDAlCVaXQ7AwJQlWl0OwMCUJVpdDsDAlCVaXQ7AwJQlW
        l0OwMCUJVpdDsDAlCVaXQ7AwJQlWl0OwMCUJVpdDsDAlCVaXQ7AwJQlWl0OwMCUJVpdDsDAlCVaXQ7Aw
        JQlWl0OwMCUJVpdDsDAlCVaXc5aMvTEQ6yi3qu9yPiYXy+8j1tyL5KdlPwkAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANA3NtnkfwGFrqotb8E+TQAAAABJRU5E
        rkJggg==
</value>
  </data>
</root>